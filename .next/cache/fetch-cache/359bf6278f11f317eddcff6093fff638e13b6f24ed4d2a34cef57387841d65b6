{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"854b64692bd9f5a3-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Tue, 13 Feb 2024 07:35:01 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=feHhQpWzoiOLYJENd9OaXoPQeXi0UBpQ91Fv4QAGpcH%2FtWKHpEBwZxb%2B1oAoN3jDSLOxh2IsEj6WESV0RVtOGZT97mipjCWygyDq3LqKdb7u1plbufZo%2FO0HGDcuKScf%2FMfEfno67bV4uxsNl1BJfdH%2Bhv%2BdShA%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}